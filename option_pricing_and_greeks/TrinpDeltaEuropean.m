function [ delta ] = TrinpDeltaEuropean(Underlying, Strike, r, T, ...
                NumOfTimeSteps,M_Bermudan, Sigma,alpha,lambda,M, StrCallPut)
          S  = Underlying;
          %('Call','E',50,50,0.4,0.05,0.02,2,500)
dS=S.*(Sigma.*S.^(alpha/2-1).*sqrt(T));
%delta = (p2-p1)/(2*h);
%[price, slat, plat] = priceOptionTrinCEVEuropeanTry1(S, Strike, r, T, ...
 %               NumOfTimeSteps, Sigma,alpha,lambda,M, StrCallPut);

%delta=((priceOptionTrinCEVBermudanTry1(S+dS, Strike, r, T, ...
%                NumOfTimeSteps,M_Bermudan, Sigma,alpha,lambda,M, StrCallPut)-...
%                priceOptionTrinCEVBermudanTry1(S, Strike, r, T, ...
%               NumOfTimeSteps,M_Bermudan, Sigma,alpha,lambda,M, StrCallPut))./dS);
delta=((priceOptionTrinCEVBermudanTry1(S+dS, Strike, r, T, ...
                NumOfTimeSteps,M_Bermudan, Sigma,alpha,lambda,M, StrCallPut)-...
                2.*priceOptionTrinCEVBermudanTry1(S, Strike, r, T, ...
               NumOfTimeSteps,M_Bermudan, Sigma,alpha,lambda,M, StrCallPut)...
              + priceOptionTrinCEVBermudanTry1(S-dS, Strike, r, T, ...
               NumOfTimeSteps,M_Bermudan, Sigma,alpha,lambda,M, StrCallPut))./(dS^2));

end